-- NON ISIN --
select
group_concat(series_number separator ' + ') as 'Series Number',
group_concat(account_id separator ' + ') as 'Account Number',
security_description as 'Sedol/Cusip/Internal',
round(sum(case when currency = 'USD' then opening_position / (select usd_eur_begin from quarterly_reporting_setup where id = 0)
		 when currency = 'CAD' then opening_position / (select cad_eur_begin from quarterly_reporting_setup where id = 0)
         when currency = 'GBP' then opening_position / (select gbp_eur_begin from quarterly_reporting_setup where id = 0)
		 when currency = 'EUR' then opening_position
	else 0 end) / 1000, 0) as 'Opening Position',
round(sum(case when currency = 'USD' then purchases / (select usd_eur_end from quarterly_reporting_setup where id = 0)
		 when currency = 'CAD' then purchases / (select cad_eur_end from quarterly_reporting_setup where id = 0)
         when currency = 'GBP' then purchases / (select gbp_eur_end from quarterly_reporting_setup where id = 0)
		 when currency = 'EUR' then purchases
	else 0 end) / 1000,0) as 'Transactions - Purchases',
round(sum(case when currency = 'USD' then sales / (select usd_eur_end from quarterly_reporting_setup where id = 0)
		 when currency = 'CAD' then sales / (select cad_eur_end from quarterly_reporting_setup where id = 0)
         when currency = 'GBP' then sales / (select gbp_eur_end from quarterly_reporting_setup where id = 0)
		 when currency = 'EUR' then sales
	else 0 end) / 1000,0) as 'Transactions - Sales',
round(sum(case when currency = 'USD' then closing_position / (select usd_eur_end from quarterly_reporting_setup where id = 0)
		 when curren8cy = 'CAD' then closing_position / (select cad_eur_end from quarterly_reporting_setup where id = 0)
         when currency = 'GBP' then closing_position / (select gbp_eur_end from quarterly_reporting_setup where id = 0)
		 when currency = 'EUR' then closing_position
	else 0 end) / 1000,0) as 'Closing Position',
market_price_at_quarter_end as 'Market price at quarter-end',
yield as 'Yield',
maturity_date as 'Maturity date',
original_maturity as 'Original maturity',
country as 'Country',
sector as 'Sector'
from quarterly_table_2b a
group by security_description, original_maturity, maturity_date, currency, country, sector, market_price_at_quarter_end, yield
order by 'Series Number', 'Closing Position';